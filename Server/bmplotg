#!/bin/sh
#
prog=bmplotg
usage="usage: $prog host"
#
#	Use gnuplot to create a plot for machine "host"
#
#	This program will create files in the current directory.

case $# in
1)	host="$1";	shift;;
*)	echo "$usage" 1>&2
	exit 1
esac

TMPDIR=${TMPDIR:-/var/tmp}
WRKDIR=${WRKDIR:-${TMPDIR}/${prog}}
mkdir -p $WRKDIR        || exit 100
rm -rf $WRKDIR/*

DIR=$HOME/BM/$host

if [ ! -d $DIR/db ]
then
	echo "$prog: `hostname -s`: dir '$DIR/raw' missing, aborted" 1>&2
	exit 2
fi

if [ -s "$DIR/Names" ]
then
	names="$DIR/Names"
else
	names=/dev/null
fi

for sensor in `ls $DIR/db | egrep -v "RX|TX"`
do
	cat $DIR/db/$sensor |
	awk  -v nfn=$names -v sensor="$sensor" '
	BEGIN {	while ((getline <nfn) > 0) {
			n=split($0, f, /[	]*/)
			if (f[2] == "")
				f[2] = substr(f[1],13,5) 
			displayname[toupper(f[1])] = f[2]
		}
		sensor_name = toupper(sensor)
		if (sensor_name in displayname)
			sensor_name = displayname[sensor_name]
print "sensor is " sensor_name
	}
	'
done

exit 13

awk -v nfn=$names -v OFS='	' '

/RX|TX/	{
	date = $1
	type = $2
	pkts = $4
	bytes = $6
	print	date, pkts, bytes >type
	next
}  

/^2.*/ {
	date=$1
	name=$2
	type = $3
	ver = $4
	batt = $5
	temp = $6
	hum = $7
	# (there is more: weight, and data in the device)
	sub(/%/, "", batt)
	sub(/F/, "", temp)
	sub(/%/, "", hum)
	print date, temp, hum >name
	next
}
END {	for (name in displayname) {
		n = "\"" displayname[name] "\""
		printf "%s using 1:2 title %s with lines, ", n, n >"plot"
	}
	printf "\n\n" >"plot"
}
'


cat >p <<!EOF 
set timefmt "%Y%m%d_%H%M"
set xdata time
set format x "%H"
set border 3
set size 2,2
set xlabel "Date"
set ylabel "Temp/Hum"
set terminal postscript eps color 24
set output "plot.ps"

plot `cat plot`
!EOF

gnuplot <p

convert plot.ps plot.png
