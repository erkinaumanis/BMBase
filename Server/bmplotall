#!/bin/sh
#
prog=bmplotall
usage="usage: $prog pngoutput"
#
#	Combine all the Broodminder data into a single plot for the web. We use
#	grap/pic/gmoff because I couldn't convince gnuplot to be reasonable.

case $# in
1)	outpng="$1";	shift;;
*)	echo "$usage" 1>&2
	exit 1
esac

for p in groff pic
do
	if [ ! -n `which $p` ]
	then
		sudo pkg install $p
	fi
done

TMPDIR=${TMPDIR:-/var/tmp}
WRKDIR=${WRKDIR:-${TMPDIR}/${prog}}
mkdir -p $WRKDIR        || exit 100
rm -rf $WRKDIR/*

PLOTLIST=$WRKDIR/ap
mkdir -p $PLOTLIST
rm -rf $PLOTLIST/*

BMDIR=$HOME/BM
cd $BMDIR

aps=`ls -d */db | sed 's:/.*::'`	# names of apiaries that have useful data
for ap in $aps
do
	mkdir $WRKDIR/ap/$ap	|| exit 90
done

ls */db/* | tee $WRKDIR/allfiles |
awk -v FS=/ -v OFS='	' -v pldir=$PLOTLIST '
{	ap=$1
	device=$3
	path = pldir "/" ap
	if (device ~ /TX|RX/) {
		sfn = path "/IO"
		print "IO" >>sfn
		next
	}
	n = split(device, octets, ":")
	if (n != 6) {
		print "confused by '" $0 "', skipping" >"/dev/stderr"
		next
	}
	if (octets[4] == 43) {
		sfn = path "/scale"
		print device >>sfn
		next
	}
	sfn = path "/sensor"
	print device >>sfn
}'

for path in `cat $WRKDIR/allfiles`
do
	cat $BMDIR/$path
done >$WRKDIR/alldata

sort $WRKDIR/alldata >$WRKDIR/alldatasorted

earliest=`sed 1q $WRKDIR/alldatasorted | cut -f1`
latest=`tail -1 $WRKDIR/alldatasorted | cut -f1`
echo from $earliest to $latest

firstdate=`echo $earliest | cut -c1-8`
lastdate=`echo $latest | cut -c1-8`
firstsec=`date -j -f %Y%m%d%H%M%S +%s ${firstdate}000000`
lastsec=`date -j -f %Y%m%d%H%M%S +%s ${lastdate}235959`
echo from `date -r $firstsec` to `date -r $lastsec`

totalsecs=`expr $lastsec - $firstsec + 2`	# integer round off plus leap second
sph=`expr 60 \* 60 \* 24`
days=`expr $totalsecs / $sph`
hours=`expr $days \* 24`

W=7

# X position for given time

X() {
	sec=`date -j -f "%Y%m%d_%H%M" +%s ${1}`
	echo `expr $sec - $totalsecs`
}

#echo $firstsec
#X $earliest
#X $latest
#echo $lastsec

echo $days days or $hours hours

plotcount=`ls $PLOTLIST/*/* | wc -l | tr -d ' '`

plots=`(cd $PLOTLIST; ls */*)`
apswithdata=`echo "$plots" | cut -f1 -d/ | sort -u`

W=$WRKDIR/w
mkdir -p $W
rm -rf $W/*

O=$WRKDIR/ps

for ap in $apswithdata
do
	if [ -s "$ap/Names" ]
	then
		names="$ap/Names"
	else
		names=/dev/null
	fi

	echo "--- $ap" >"/dev/stderr"

	if [ -s $PLOTLIST/$ap/scale ]
	then
		echo "	scale"  >"/dev/stderr"
		for device in `cat $PLOTLIST/$ap/scale`
		do
			display_name=`grep "^$device	" $names | sed 's/^.*	//'`
			if [ ! -n "$display_name" ]
			then
				display_name=`echo "$device" | sed 's/..:..:..:..://'`
			fi
	
			echo "		$BMDIR/$ap/db/$device ($display_name)">"/dev/stderr"
		done
	fi

	if [ -s $PLOTLIST/$ap/sensor ]
	then
		echo "	sensor"  >"/dev/stderr"
		for device in `cat $PLOTLIST/$ap/sensor`
		do
			display_name=`grep "^$device	" $names | sed 's/^.*	//'`
			if [ ! -n "$display_name" ]
			then
				display_name=`echo "$device" | sed 's/..:..:..:..://'`
			fi
	
			echo "		$BMDIR/$ap/db/$device ($display_name)">"/dev/stderr"
		done
	fi

	if [ -s $PLOTLIST/$ap/IO ]
	then
		echo "	IO"  >"/dev/stderr"
		echo "		$BMDIR/$ap/db/RX">"/dev/stderr"
		echo "		$BMDIR/$ap/db/TX">"/dev/stderr"
	fi
done | tee grap | pic | groff >$O.ps

convert $O.ps $outpng
