#!/bin/sh
#
prog=bmplotap
usage="usage: $prog [-l] ap pngout"
#
#	Plot all the information available for a given apiary, and
#	create a png file suitable for the web.
#
#	-l	generate liveness report

live=

case "$1" in
-l)	live=true;	shift;;
-*)	echo "$usage" 1>&2
	exit 1
esac

case $# in
2)	ap="$1";	shift
	pngout="$1";	shift;;
*)	echo "$usage" 1>&2
	exit 2
esac

TMPDIR=${TMPDIR:-/var/tmp}
WRKDIR=${WRKDIR:-${TMPDIR}/${prog}.${ap}}
mkdir -p $WRKDIR        || exit 100
rm -rf $WRKDIR/*

BMDIR=$HOME/BM

if [ -f $BMDIR/$ap/.showactivity ]
then
	live=true
fi

if [ -s "$BMDIR/$ap/Names" ]
then
	names="$BMDIR/$ap/Names"
else
	names=/dev/null
fi

if [ -s $BMDIR/.xrange ]
then
	export	XRANGE=`cat $BMDIR/.xrange`
elif [ -s $BMDIR/$ap/xrange ]
then
	export	XRANGE=`cat $BMDIR/$ap/xrange`
fi

(cd $WRKDIR
	(cd $BMDIR/$ap/db; ls) |
	awk -v FS=/ -v OFS='	' '
	{	device=$1
		if (device ~ /TX|RX/) {
			print "IO" >>"IO"
			next
		}
		n = split(device, octets, ":")
		if (n != 6) {
			print "confused by '" $0 "', skipping" >"/dev/stderr"
			next
		}
		if (octets[4] == 43) {
			print device >>"scale"
			next
		}
		print device >>"sensor"
	}'

	if [ -n "$live" ]
	then
		cat $BMDIR/$ap/db/* |
		awk 'BEGIN {	size = length("20190329_12")
		}
		{	time = $1
			print substr(time, 1, size), "1"
		}' |
		sort -u >$WRKDIR/onticks

		cat $BMDIR/*/db/* |
		awk 'BEGIN {	size = length("20190329_12")
		}
		{	time = $1
			print substr(time, 1, size)
		}' |
		sort -u >$WRKDIR/allticks

		join -a1 $WRKDIR/allticks $WRKDIR/onticks |
		awk '{	if (NF == 1)
				print $1, "0"
			else
				print
		}' >$WRKDIR/tickdb
#		echo "live	$WRKDIR/tickdb	1:2" | STYLE="dots" bmplot "$ap" "Live" live.eps
		echo "live	$WRKDIR/tickdb	1:2" | bmplot "$ap" "Live" live.eps
	fi
	
	for i in scale sensor IO
	do
		if [ ! -s $i ]
		then
			continue
		fi
	
		for f in `cat $i`
		do
			display_name=`grep "^$f	" $names | sed 's/^.*	//'`
			if [ ! -n "$display_name" ]
			then
				#display_name=`echo "$f" | sed 's/..:..:..:..://'`
				display_name=`echo "$f" | sed 's/..:..:..://'`
			fi
	
			case $i in
			scale)
				echo "${display_name}	$BMDIR/$ap/db/$f	1:5"	
				;;
			sensor)
				echo "${display_name}-t	$BMDIR/$ap/db/$f	1:(\$3)"	
	#			echo "${display_name}-h	$BMDIR/$ap/db/$f	1:(\$4)"	
	#			echo "${display_name}-b	$BMDIR/$ap/db/$f	1:(\$2)"	
				;;
			IO)
				;;
			esac
		done | tee $i.in | tee /tmp/$i.in |
		case $i in
		scale)
			bmplot "$ap" "Weight" $i.eps
			;;
		sensor)
			bmplot "$ap" "Temp" $i.eps
			;;
		IO)
			cat >/dev/null
			;;
		esac
	done
)

montage -tile 1 -geometry 768 $WRKDIR/*.eps $pngout
