#!/bin/sh
#
prog=bmplot
usage="usage: $prog [-x] name ylabel epsfile"
#
#	Create an eps plot written to the given eps file.  The plot is
#	labeled with "title", if it isn't null.
#
#	stdin contains lines with two tab-separated fields:
#		label
#		file containing the data
#
#	if environment variable XRANGE is set, use it to make the
#	time axis consistent.

LW=3

xlabel=false
while [ $# -gt 0 ]
do
	case "$1" in
	-x)	xlabel=true;	shift;;
	-*)
		echo "$usage" 1>&2
		exit 1;;
	*)
		break;
	esac
done

if [ $# -ne 3 ]
then
	echo "$usage" 1>&2
	exit 2
fi

title="$1";	shift
ylabel="$1";	shift
epsfile="$1";	shift

TMPDIR=${TMPDIR:-/var/tmp}
WRKDIR=${WRKDIR:-${TMPDIR}/${prog}}
mkdir -p $WRKDIR        || exit 100
rm -rf $WRKDIR/*

PLOTIN=$WRKDIR/gnuplot.in
PLOTCMDS=$WRKDIR/gnuplot.plots

(	while IFS="	" read label fn field
	do
		echo "\"$fn\" using $field title \"$label\" with lines lw $LW, \\"
	done
) >>$PLOTCMDS

if [ ! -s $PLOTCMDS ]	## nothing to plot
then
	exit 0
fi

cat  <<!EOF | tee /tmp/$prog |
set timefmt "%Y%m%d_%H%M"
set xdata time
#set format x ""
#set lmargin at screen 0.5
#set datafile missing "GAP"
#show datafile missing
set size 2
set ylabel "$ylabel"
`	if "$xlabel"
	then
		echo "set xlabel \"Date\""

	fi
	if [ -n "$XRANGE" ]
	then
		echo "set xrange [$XRANGE]"
	fi
`
#set term png nocrop enhanced size 1080,1080
set terminal postscript eps color 24
set output "$epsfile"
`	if [ -n "$title" ]
	then
		echo "set title \"$title\""
		# echo set format x \"%a\""
	fi
`
`	echo -n "plot "
	cat $PLOTCMDS
	echo
`
!EOF
gnuplot
